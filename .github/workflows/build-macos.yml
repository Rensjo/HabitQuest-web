name: macOS DMG Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-apple-darwin, x86_64-apple-darwin]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install macOS dependencies
        run: |
          # Install create-dmg for DMG creation
          npm install -g create-dmg || true

      - name: Install frontend dependencies
        run: |
          npm ci

      - name: Build frontend
        run: |
          npm run build

      - name: Build Tauri DMG (ad-hoc)
        uses: tauri-apps/tauri-action@v0
        env:
          APPLE_SIGNING_IDENTITY: "-"
        with:
          args: --target ${{ matrix.target }}

      - name: List build outputs
        run: |
          echo "=== Build output structure ==="
          find src-tauri/target -name "*.dmg" -o -name "*.app" -o -name "*.tar.gz" | head -20
          echo "=== Bundle directory contents ==="
          ls -la src-tauri/target/${{ matrix.target }}/release/bundle/ || echo "Bundle directory not found"
          echo "=== All target directories ==="
          ls -la src-tauri/target/ || echo "Target directory not found"
          echo "=== Release directory contents ==="
          ls -la src-tauri/target/${{ matrix.target }}/release/ || echo "Release directory not found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/**/*
            src-tauri/target/${{ matrix.target }}/release/*.app
            src-tauri/target/${{ matrix.target }}/release/*.dmg
          retention-days: 30
