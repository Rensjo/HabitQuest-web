name: Production Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v4.1.2)'
        required: true
        default: 'v4.1.2'
      prerelease:
        description: 'Mark as pre-release'
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  # Windows Production Build
  windows-production:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - name: Build and sign Windows app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }}
          releaseName: 'HabitQuest ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: |
            ## ðŸŽ¯ HabitQuest Desktop App - Production Release
            
            ### What's New
            - Enhanced analytics dashboard with comprehensive tracking
            - Cross-device data synchronization
            - Improved performance and stability
            - Modern UI with customizable themes
            
            ### Windows Installation
            1. Download the `.msi` installer for best experience
            2. Or use the `.exe` setup file for traditional installation
            3. Run as administrator if needed
            
            ### System Requirements
            - Windows 10/11 (64-bit recommended)
            - 100MB free disk space
            - Internet connection for sync features
          releaseDraft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          args: --target x86_64-pc-windows-msvc

  # macOS Production Build  
  macos-production:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - name: Build universal macOS app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }}
          releaseName: 'HabitQuest ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: |
            ## ðŸŽ¯ HabitQuest Desktop App - macOS Release
            
            ### Installation Instructions
            1. Download the `.dmg` file
            2. Open the DMG and drag HabitQuest to Applications
            3. Run HabitQuest from Applications folder
            
            ### Compatibility
            - âœ… Apple Silicon (M1/M2/M3) Macs
            - âœ… Intel Macs
            - Requires macOS 11.0 or later
            
            ### Features
            - Native macOS integration
            - Optimized for both Intel and Apple Silicon
            - Full system theme support
          releaseDraft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          args: --target universal-apple-darwin

  # Linux Production Build
  linux-production:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - name: Build Linux packages
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }}
          releaseName: 'HabitQuest ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: |
            ## ðŸŽ¯ HabitQuest Desktop App - Linux Release
            
            ### Installation Options
            
            **Debian/Ubuntu (.deb):**
            ```bash
            sudo dpkg -i habitquest_*.deb
            sudo apt-get install -f  # Fix dependencies if needed
            ```
            
            **Red Hat/Fedora (.rpm):**
            ```bash
            sudo rpm -i habitquest_*.rpm
            # or
            sudo dnf install habitquest_*.rpm
            ```
            
            **AppImage (Universal):**
            ```bash
            chmod +x HabitQuest_*.AppImage
            ./HabitQuest_*.AppImage
            ```
            
            ### System Requirements
            - Linux x86_64 (most distributions)
            - GTK 3.0 or later
            - WebKit2GTK
            
            ### Tested Distributions
            - Ubuntu 20.04+
            - Fedora 35+
            - Arch Linux
            - openSUSE
          releaseDraft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          args: --target x86_64-unknown-linux-gnu