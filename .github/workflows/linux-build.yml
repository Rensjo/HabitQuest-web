name: Linux AppImage Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Try newer webkit package first, fallback to older version
        sudo apt-get install -y libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev
        sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev
        
    - name: Install Tauri CLI
      run: |
        echo "Installing Tauri CLI via cargo..."
        cargo install tauri-cli --version ^2.0
        echo "Tauri CLI installed, checking version..."
        export PATH="$HOME/.cargo/bin:$PATH"
        chmod +x "$HOME/.cargo/bin/tauri" || true
        cargo tauri --version
      
    - name: Install frontend dependencies
      run: |
        npm ci
        
    - name: Build frontend
      run: |
        npm run build
        
    - name: Build Linux installer
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        chmod +x "$HOME/.cargo/bin/tauri" || true
        cargo tauri build --target ${{ matrix.target }}
        
    - name: List build outputs
      run: |
        echo "=== Build output structure ==="
        find src-tauri/target -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" | head -20
        echo "=== Bundle directory contents ==="
        ls -la src-tauri/target/${{ matrix.target }}/release/bundle/ || echo "Bundle directory not found"
        echo "=== Release directory contents ==="
        ls -la src-tauri/target/${{ matrix.target }}/release/ || echo "Release directory not found"
        
    - name: Package artifacts
      run: |
        mkdir -p packages
        cd src-tauri/target/${{ matrix.target }}/release/bundle
        
        # Package AppImage
        if [ -d "appimage" ]; then
          cd appimage && zip -r "../../../../../../packages/HabitQuest-linux-x64.zip" * && cd ..
        fi
        
        # Package DEB
        if [ -d "deb" ]; then
          cd deb && zip -r "../../../../../../packages/HabitQuest-linux-x64-deb.zip" * && cd ..
        fi
        
        # Package RPM (if available)
        if [ -d "rpm" ]; then
          cd rpm && zip -r "../../../../../../packages/HabitQuest-linux-x64-rpm.zip" * && cd ..
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: HabitQuest-linux-${{ matrix.target }}
        path: |
          packages/*.zip
          src-tauri/target/${{ matrix.target }}/release/bundle/**/*
        retention-days: 30