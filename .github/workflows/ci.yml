name: CI - Test Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/release.yml'
      - '.github/workflows/build-macos.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  # Test builds without creating artifacts
  test-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: Windows
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macOS ARM64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macOS Intel
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: Linux

    runs-on: ${{ matrix.os }}
    name: Test Build - ${{ matrix.name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Lint and type check
        run: |
          npm run lint
          npm run type-check

      - name: Test build (frontend only)
        run: npm run build

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Test Tauri build (no bundle)
        run: npm run tauri build -- --target ${{ matrix.target }} --no-bundle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Web build test
  test-web-build:
    runs-on: ubuntu-latest
    name: Test Web Build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Lint check
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Build web app
        run: npm run build

      - name: Test web app
        run: npm run preview &
        env:
          CI: true